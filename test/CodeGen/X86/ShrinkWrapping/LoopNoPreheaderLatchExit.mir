# RUN: llc -mtriple=x86_64-- -run-pass=prologepilog %s -debug-only=shrink-wrap2 -o /dev/null 2>&1 | FileCheck %s
# REQUIRE: asserts
# XFAIL: *
--- |
  define void @f0() nounwind {
  entry:
    ret void
  }
...
---
name:            f0
tracksRegLiveness: true
body:             |
  bb.0:
    successors: %bb.2, %bb.1

    %eflags = IMPLICIT_DEF
    JE_1 %bb.2, implicit killed %eflags
    JMP_1 %bb.1

  bb.1:
    successors: %bb.3

    JMP_1 %bb.3

  bb.2:
    successors: %bb.3

    JMP_1 %bb.3

  bb.3:
    successors: %bb.4

    %rbx = IMPLICIT_DEF
    JMP_1 %bb.4

  bb.4:
    successors: %bb.3

    %eflags = IMPLICIT_DEF
    JE_1 %bb.3, implicit killed %eflags
    RET 0

...
# FIXME: ShrinkWrap2: This test still fails, since there is no way to place a
# restore outside a loop. This should not be possible in real code.

#CHECK-LABEL: f0

#CHECK: BB#3 uses : %RBX
#CHECK: **** Shrink-wrapping results
#CHECK-NEXT: BB#0: Saves: %RBX, | Restores:
#CHECK-NEXT: BB#3: Saves: | Restores: %RBX,
