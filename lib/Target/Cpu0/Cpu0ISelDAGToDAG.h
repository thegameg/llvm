//===---- Cpu0ISelDAGToDAG.h - A Dag to Dag Inst Selector for Cpu0 --------===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This file defines an instruction selector for the Cpu0 target.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_CPU0_CPU0ISELDAGTODAG_H
#define LLVM_LIB_TARGET_CPU0_CPU0ISELDAGTODAG_H

#include "Cpu0TargetMachine.h"
#include "llvm/CodeGen/SelectionDAGISel.h"

#define GET_INSTRINFO_ENUM
#include "Cpu0GenInstrInfo.inc"

#define GET_REGINFO_ENUM
#include "Cpu0GenRegisterInfo.inc"

//===----------------------------------------------------------------------===//
// Instruction Selector Implementation
//===----------------------------------------------------------------------===//

//===----------------------------------------------------------------------===//
// Cpu0DAGToDAGISel - Cpu0 specific code to select Cpu0 machine
// instructions for SelectionDAG operations.
//===----------------------------------------------------------------------===//
namespace llvm {

class Cpu0DAGToDAGISel : public SelectionDAGISel {
public:
  explicit Cpu0DAGToDAGISel(Cpu0TargetMachine &TM) : SelectionDAGISel(TM) {}

  // Pass Name
  const char *getPassName() const override {
    return "Cpu0 DAG->DAG Pattern Instruction Selection";
  }

protected:
// Include the pieces autogenerated from the target description.
#include "Cpu0GenDAGISel.inc"

  void Select(SDNode *N) override;
};
}

#endif
